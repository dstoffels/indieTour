[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "UniqueValidator",
        "importPath": "rest_framework.validators",
        "description": "rest_framework.validators",
        "isExtraImport": true,
        "detail": "rest_framework.validators",
        "documentation": {}
    },
    {
        "label": "UniqueValidator",
        "importPath": "rest_framework.validators",
        "description": "rest_framework.validators",
        "isExtraImport": true,
        "detail": "rest_framework.validators",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "validate_password",
        "importPath": "django.contrib.auth.password_validation",
        "description": "django.contrib.auth.password_validation",
        "isExtraImport": true,
        "detail": "django.contrib.auth.password_validation",
        "documentation": {}
    },
    {
        "label": "validate_password",
        "importPath": "django.contrib.auth.password_validation",
        "description": "django.contrib.auth.password_validation",
        "isExtraImport": true,
        "detail": "django.contrib.auth.password_validation",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandAdmin",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandAdmin",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "Band",
        "importPath": "bands.models",
        "description": "bands.models",
        "isExtraImport": true,
        "detail": "bands.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "CASCADE",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "UUIDField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CASCADE",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "DO_NOTHING",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TextField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TimeField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "UUIDField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CASCADE",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TextField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "DateField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TimeField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "UUIDField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CASCADE",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CASCADE",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CASCADE",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TextField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ManyToManyField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "DateField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TimeField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TourSerializer",
        "importPath": "tours.serializers",
        "description": "tours.serializers",
        "isExtraImport": true,
        "detail": "tours.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "isExtraImport": true,
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "isExtraImport": true,
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "isExtraImport": true,
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "BandUserSerializer",
        "importPath": "bands.band_user_serializer",
        "description": "bands.band_user_serializer",
        "isExtraImport": true,
        "detail": "bands.band_user_serializer",
        "documentation": {}
    },
    {
        "label": "BandUserSerializer",
        "importPath": "bands.band_user_serializer",
        "description": "bands.band_user_serializer",
        "isExtraImport": true,
        "detail": "bands.band_user_serializer",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.band_user_serializer",
        "description": "bands.band_user_serializer",
        "isExtraImport": true,
        "detail": "bands.band_user_serializer",
        "documentation": {}
    },
    {
        "label": "BandUserSerializer",
        "importPath": "bands.band_user_serializer",
        "description": "bands.band_user_serializer",
        "isExtraImport": true,
        "detail": "bands.band_user_serializer",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "importPath": "bands.band_user_serializer",
        "description": "bands.band_user_serializer",
        "isExtraImport": true,
        "detail": "bands.band_user_serializer",
        "documentation": {}
    },
    {
        "label": "BandSerializer",
        "importPath": "bands.serializers",
        "description": "bands.serializers",
        "isExtraImport": true,
        "detail": "bands.serializers",
        "documentation": {}
    },
    {
        "label": "BandSerializer",
        "importPath": "bands.serializers",
        "description": "bands.serializers",
        "isExtraImport": true,
        "detail": "bands.serializers",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "DateContact",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Timeslot",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "TimeslotType",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Tour",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "Timeslot",
        "importPath": "tours.models",
        "description": "tours.models",
        "isExtraImport": true,
        "detail": "tours.models",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "UUIDModel",
        "importPath": "uuid_model",
        "description": "uuid_model",
        "isExtraImport": true,
        "detail": "uuid_model",
        "documentation": {}
    },
    {
        "label": "TimeslotSerializer",
        "importPath": "timeslots.serializers",
        "description": "timeslots.serializers",
        "isExtraImport": true,
        "detail": "timeslots.serializers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "dates.models",
        "description": "dates.models",
        "isExtraImport": true,
        "detail": "dates.models",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "dates.models",
        "description": "dates.models",
        "isExtraImport": true,
        "detail": "dates.models",
        "documentation": {}
    },
    {
        "label": "DateSerializer",
        "importPath": "dates.serializers",
        "description": "dates.serializers",
        "isExtraImport": true,
        "detail": "dates.serializers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "IsBandUser",
        "importPath": "bands.permissions",
        "description": "bands.permissions",
        "isExtraImport": true,
        "detail": "bands.permissions",
        "documentation": {}
    },
    {
        "label": "IsBandUser",
        "importPath": "bands.permissions",
        "description": "bands.permissions",
        "isExtraImport": true,
        "detail": "bands.permissions",
        "documentation": {}
    },
    {
        "label": "IsBandUser",
        "importPath": "bands.permissions",
        "description": "bands.permissions",
        "isExtraImport": true,
        "detail": "bands.permissions",
        "documentation": {}
    },
    {
        "label": "IsBandUser",
        "importPath": "bands.permissions",
        "description": "bands.permissions",
        "isExtraImport": true,
        "detail": "bands.permissions",
        "documentation": {}
    },
    {
        "label": "IsBandUser",
        "importPath": "bands.permissions",
        "description": "bands.permissions",
        "isExtraImport": true,
        "detail": "bands.permissions",
        "documentation": {}
    },
    {
        "label": "IsTourUser",
        "importPath": "tours.tours.permissions",
        "description": "tours.tours.permissions",
        "isExtraImport": true,
        "detail": "tours.tours.permissions",
        "documentation": {}
    },
    {
        "label": "IsTourUser",
        "importPath": "tours.tours.permissions",
        "description": "tours.tours.permissions",
        "isExtraImport": true,
        "detail": "tours.tours.permissions",
        "documentation": {}
    },
    {
        "label": "IsTourUser",
        "importPath": "tours.tours.permissions",
        "description": "tours.tours.permissions",
        "isExtraImport": true,
        "detail": "tours.tours.permissions",
        "documentation": {}
    },
    {
        "label": "TourSerializer",
        "importPath": "tours.tours.serializers",
        "description": "tours.tours.serializers",
        "isExtraImport": true,
        "detail": "tours.tours.serializers",
        "documentation": {}
    },
    {
        "label": "ActiveTourSerializer",
        "importPath": "tours.tours.serializers",
        "description": "tours.tours.serializers",
        "isExtraImport": true,
        "detail": "tours.tours.serializers",
        "documentation": {}
    },
    {
        "label": "TourSerializer",
        "importPath": "tours.tours.serializers",
        "description": "tours.tours.serializers",
        "isExtraImport": true,
        "detail": "tours.tours.serializers",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "bands",
        "description": "bands",
        "isExtraImport": true,
        "detail": "bands",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "tours.tours",
        "description": "tours.tours",
        "isExtraImport": true,
        "detail": "tours.tours",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "rest_framework.request",
        "description": "rest_framework.request",
        "isExtraImport": true,
        "detail": "rest_framework.request",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "contacts.models",
        "description": "contacts.models",
        "isExtraImport": true,
        "detail": "contacts.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "contacts.models",
        "description": "contacts.models",
        "isExtraImport": true,
        "detail": "contacts.models",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "tours.dates",
        "description": "tours.dates",
        "isExtraImport": true,
        "detail": "tours.dates",
        "documentation": {}
    },
    {
        "label": "DateSerializer",
        "importPath": "tours.dates.serializers",
        "description": "tours.dates.serializers",
        "isExtraImport": true,
        "detail": "tours.dates.serializers",
        "documentation": {}
    },
    {
        "label": "DateSerializer",
        "importPath": "tours.dates.serializers",
        "description": "tours.dates.serializers",
        "isExtraImport": true,
        "detail": "tours.dates.serializers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.authentication.migrations.0001_initial",
        "description": "backend.authentication.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('password', models.CharField(max_length=128, verbose_name='password')),\n                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),",
        "detail": "backend.authentication.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.authentication.migrations.0002_initial",
        "description": "backend.authentication.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('tours', '0001_initial'),\n        ('bands', '0001_initial'),\n        ('authentication', '0001_initial'),\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.AddField(",
        "detail": "backend.authentication.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "backend.authentication.admin",
        "description": "backend.authentication.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    pass\n# Register your models here.\nadmin.site.register(User, CustomUserAdmin)",
        "detail": "backend.authentication.admin",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "backend.authentication.apps",
        "description": "backend.authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authentication'",
        "detail": "backend.authentication.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend.authentication.models",
        "description": "backend.authentication.models",
        "peekOfCode": "class User(AbstractUser):\n    id = models.UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n    active_band = models.ForeignKey('bands.Band', on_delete=models.SET_NULL, null=True, default=None)\n    active_tour = models.ForeignKey('tours.Tour', on_delete=models.SET_NULL, null=True, default=None)\n    username = models.CharField(unique=False, blank=True, max_length=255)\n    email = models.EmailField(unique=True)\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['password', 'username']",
        "detail": "backend.authentication.models",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "kind": 6,
        "importPath": "backend.authentication.serializers",
        "description": "backend.authentication.serializers",
        "peekOfCode": "class MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user: User):\n        token = super().get_token(user)\n        # for any additional fields you'd like to add to the JWT sent back in response\n        # add below using the token[\"field name\"] = user.name_of_property\n        # token[\"is_student\"] = user.is_student\n        token[\"username\"] = user.username\n        token[\"email\"] = user.email\n        token['is_active'] = user.is_active",
        "detail": "backend.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "RegistrationSerializer",
        "kind": 6,
        "importPath": "backend.authentication.serializers",
        "description": "backend.authentication.serializers",
        "peekOfCode": "class RegistrationSerializer(serializers.ModelSerializer):\n    email = serializers.EmailField(required=True, validators=[\n                                   UniqueValidator(queryset=User.objects.all())])\n    password = serializers.CharField(\n        write_only=True, required=True, validators=[validate_password])\n    class Meta:\n        model = User\n        # If added new columns through the User model, add them in the fields\n        # list as seen below\n        fields = ('username', 'password', 'email',",
        "detail": "backend.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend.authentication.serializers",
        "description": "backend.authentication.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'username', 'email', 'last_login']",
        "detail": "backend.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.authentication.urls",
        "description": "backend.authentication.urls",
        "peekOfCode": "urlpatterns = [\n    path('login/',views. MyTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('login/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('register/', views.RegisterView.as_view(), name='register'),\n    path('user/', views.update_user),\n    path('user/<str:uid>/', views.new_user),\n]",
        "detail": "backend.authentication.urls",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairView",
        "kind": 6,
        "importPath": "backend.authentication.views",
        "description": "backend.authentication.views",
        "peekOfCode": "class MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer\nclass RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegistrationSerializer\n    def post(self, request, *args, **kwargs):\n        subject = 'Welcome to indietour!'\n        message = f\"Hello {request.data['username']}, thank you for signing up for indietour.\"\n        email_from = settings.EMAIL_HOST_USER",
        "detail": "backend.authentication.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "backend.authentication.views",
        "description": "backend.authentication.views",
        "peekOfCode": "class RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegistrationSerializer\n    def post(self, request, *args, **kwargs):\n        subject = 'Welcome to indietour!'\n        message = f\"Hello {request.data['username']}, thank you for signing up for indietour.\"\n        email_from = settings.EMAIL_HOST_USER\n        recipients = [request.data['email']]\n        send_mail( subject, message, email_from, recipients)",
        "detail": "backend.authentication.views",
        "documentation": {}
    },
    {
        "label": "all_users",
        "kind": 2,
        "importPath": "backend.authentication.views",
        "description": "backend.authentication.views",
        "peekOfCode": "def all_users(req):\n    users = User.objects.all()\n    return Response(UserSerializer(users, many=True).data)\n@api_view([GET])\ndef new_user(req, uid):\n    user = get_object_or_404(User, id=uid)\n    if user.password:\n        return Response({\"detail\": \"Not found.\"}, status=status.HTTP_404_NOT_FOUND)\n    refresh = RefreshToken.for_user(user)\n    return Response(str(refresh.access_token), status=status.HTTP_200_OK)",
        "detail": "backend.authentication.views",
        "documentation": {}
    },
    {
        "label": "new_user",
        "kind": 2,
        "importPath": "backend.authentication.views",
        "description": "backend.authentication.views",
        "peekOfCode": "def new_user(req, uid):\n    user = get_object_or_404(User, id=uid)\n    if user.password:\n        return Response({\"detail\": \"Not found.\"}, status=status.HTTP_404_NOT_FOUND)\n    refresh = RefreshToken.for_user(user)\n    return Response(str(refresh.access_token), status=status.HTTP_200_OK)\n@api_view([PATCH])\n@permission_classes([IsAuthenticated])\ndef update_user(req):\n    user = get_object_or_404(User, id=req.user.id)",
        "detail": "backend.authentication.views",
        "documentation": {}
    },
    {
        "label": "update_user",
        "kind": 2,
        "importPath": "backend.authentication.views",
        "description": "backend.authentication.views",
        "peekOfCode": "def update_user(req):\n    user = get_object_or_404(User, id=req.user.id)\n    if req.data.get('password', False) and not user.password:\n        user.set_password(req.data['password'])\n        user.save()\n    if req.data.get('old_pw', False):\n        old_pw = req.data['old_pw']\n        new_pw = req.data['new_pw']\n        if user.check_password(old_pw):\n            user.set_password(new_pw)",
        "detail": "backend.authentication.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.bands.migrations.0001_initial",
        "description": "backend.bands.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Band',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "backend.bands.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "BandsConfig",
        "kind": 6,
        "importPath": "backend.bands.apps",
        "description": "backend.bands.apps",
        "peekOfCode": "class BandsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'bands'",
        "detail": "backend.bands.apps",
        "documentation": {}
    },
    {
        "label": "BandUserSerializer",
        "kind": 6,
        "importPath": "backend.bands.band_user_serializer",
        "description": "backend.bands.band_user_serializer",
        "peekOfCode": "class BandUserSerializer(serializers.ModelSerializer):\n  @staticmethod\n  def create_or_update(users, band_id):\n      band_users = []\n      for band_user_data in users:\n        user, user_created = User.objects.get_or_create(email=band_user_data['email'])\n        banduser, banduser_created = BandUser.objects.get_or_create(user=user, band_id = band_id)\n        # send email to new user\n        if user_created:\n          BandUserSerializer.send_new_user_email(banduser)",
        "detail": "backend.bands.band_user_serializer",
        "documentation": {}
    },
    {
        "label": "Band",
        "kind": 6,
        "importPath": "backend.bands.models",
        "description": "backend.bands.models",
        "peekOfCode": "class Band(Model):\n  id = UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n  name = CharField(max_length=255, unique=True)\n  users = ManyToManyField(User, through='BandUser', related_name='band_users')\n  is_archived = BooleanField(default=False)\n  owner = ForeignKey(User, on_delete=CASCADE)\n  def __str__(self) -> str:\n    return self.name\n#BANDUSER MODEL\nclass BandUser(Model):",
        "detail": "backend.bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "kind": 6,
        "importPath": "backend.bands.models",
        "description": "backend.bands.models",
        "peekOfCode": "class BandUser(Model):\n  id = UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n  band = ForeignKey(Band, on_delete=CASCADE)\n  user = ForeignKey(User, on_delete=CASCADE)\n  is_admin = BooleanField(default=False)\n  def __str__(self) -> str:\n    return f'{self.user.email} ({self.band})'\n# ADMIN\nclass BandUserInline(admin.TabularInline):\n  model = BandUser",
        "detail": "backend.bands.models",
        "documentation": {}
    },
    {
        "label": "BandUserInline",
        "kind": 6,
        "importPath": "backend.bands.models",
        "description": "backend.bands.models",
        "peekOfCode": "class BandUserInline(admin.TabularInline):\n  model = BandUser\n  extra = 1\nclass BandAdmin(admin.ModelAdmin):\n  inlines = [BandUserInline]",
        "detail": "backend.bands.models",
        "documentation": {}
    },
    {
        "label": "BandAdmin",
        "kind": 6,
        "importPath": "backend.bands.models",
        "description": "backend.bands.models",
        "peekOfCode": "class BandAdmin(admin.ModelAdmin):\n  inlines = [BandUserInline]",
        "detail": "backend.bands.models",
        "documentation": {}
    },
    {
        "label": "BandSerializer",
        "kind": 6,
        "importPath": "backend.bands.serializers",
        "description": "backend.bands.serializers",
        "peekOfCode": "class BandSerializer(serializers.ModelSerializer):\n    tours = TourSerializer(many=True, required=False, read_only=True, source='tour_set')\n    users = BandUserSerializer(many=True, read_only=True, source='banduser_set')\n    owner = UserSerializer(read_only=True)\n    class Meta:\n        model = Band\n        fields = ['id', 'name', 'owner', 'tours', 'users']\n        depth = 1\n    def create_band(self, req):\n        self.is_valid(raise_exception=True)",
        "detail": "backend.bands.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.bands.urls",
        "description": "backend.bands.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.bands_table),\n    path('active/', views.get_active_band),\n    path('<str:band_id>/', views.band_detail),\n    path('<str:band_id>/users/', views.banduser_table),\n    path('<str:band_id>/users/<str:banduser_id>/', views.banduser_detail),\n    path('<str:band_id>/active/', views.set_active_band),\n    path('<str:band_id>/tours/', include('tours.urls')),\n]",
        "detail": "backend.bands.urls",
        "documentation": {}
    },
    {
        "label": "bands_table",
        "kind": 2,
        "importPath": "backend.bands.views",
        "description": "backend.bands.views",
        "peekOfCode": "def bands_table(req):\n  if req.method == GET:\n    users_bands = list(chain(Band.objects.filter(owner=req.user), Band.objects.filter(banduser__user=req.user)))\n    ser = BandSerializer(users_bands, many=True)\n    return Response(ser.data)\n  elif req.method == POST:\n    ser = BandSerializer(data=req.data)\n    return ser.create_band(req)\n@api_view([GET, PUT, DELETE, PATCH])\n@permission_classes([IsAuthenticated])",
        "detail": "backend.bands.views",
        "documentation": {}
    },
    {
        "label": "band_detail",
        "kind": 2,
        "importPath": "backend.bands.views",
        "description": "backend.bands.views",
        "peekOfCode": "def band_detail(req, band_id):\n  band = get_object_or_404(Band, id=band_id)\n  if req.method == GET:\n    ser = BandSerializer(band)\n    return Response(ser.data, status=status.HTTP_200_OK)\n  if req.method == PATCH:\n    ser = BandSerializer(band, data=req.data, partial=True)\n    ser.is_valid(raise_exception=True)\n    ser.save()\n    return Response(ser.data, status=status.HTTP_200_OK)",
        "detail": "backend.bands.views",
        "documentation": {}
    },
    {
        "label": "set_active_band",
        "kind": 2,
        "importPath": "backend.bands.views",
        "description": "backend.bands.views",
        "peekOfCode": "def set_active_band(req, band_id):\n  user = get_object_or_404(User, id=req.user.id)\n  band = get_object_or_404(Band, id=band_id)\n  band_tours = Tour.objects.filter(band_id=band_id)\n  user.active_tour = band_tours[len(band_tours) - 1] if len(band_tours) > 0 else None\n  user.active_band = band\n  user.save()\n  ser = BandSerializer(band)\n  return Response(ser.data, status=status.HTTP_200_OK)\n@api_view([GET])",
        "detail": "backend.bands.views",
        "documentation": {}
    },
    {
        "label": "get_active_band",
        "kind": 2,
        "importPath": "backend.bands.views",
        "description": "backend.bands.views",
        "peekOfCode": "def get_active_band(req):\n  user = get_object_or_404(User, id=req.user.id)\n  data = None\n  if user.active_band:\n    ser = BandSerializer(user.active_band)\n    data = ser.data\n  return Response(data, status=status.HTTP_200_OK)\n@api_view([GET, POST])\n@permission_classes([IsAuthenticated])\ndef banduser_table(req, band_id):",
        "detail": "backend.bands.views",
        "documentation": {}
    },
    {
        "label": "banduser_table",
        "kind": 2,
        "importPath": "backend.bands.views",
        "description": "backend.bands.views",
        "peekOfCode": "def banduser_table(req, band_id):\n  if req.method == GET:\n    bandusers = BandUser.objects.filter(band_id=band_id)\n    ser = BandUserSerializer(bandusers, many=True)\n    return Response(ser.data, status=status.HTTP_200_OK)\n  elif req.method == POST:\n    bandusers = BandUserSerializer.create_or_update([req.data], band_id)\n    ser = BandUserSerializer(bandusers[0])\n    return Response(ser.data, status=status.HTTP_201_CREATED)\n@api_view([PATCH, DELETE])",
        "detail": "backend.bands.views",
        "documentation": {}
    },
    {
        "label": "banduser_detail",
        "kind": 2,
        "importPath": "backend.bands.views",
        "description": "backend.bands.views",
        "peekOfCode": "def banduser_detail(req, band_id, banduser_id):\n  banduser = get_object_or_404(BandUser, band_id=band_id, id=banduser_id)\n  if req.method == PATCH:\n    ser = BandUserSerializer(banduser, data=req.data, partial=True)\n    ser.is_valid(raise_exception=True)\n    ser.save()\n    return Response(ser.data, status=status.HTTP_200_OK)\n  if req.method == DELETE:\n    banduser.delete()\n    return Response(status=status.HTTP_204_NO_CONTENT)",
        "detail": "backend.bands.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.contacts.migrations.0001_initial",
        "description": "backend.contacts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Contact\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "backend.contacts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ContactsConfig",
        "kind": 6,
        "importPath": "backend.contacts.apps",
        "description": "backend.contacts.apps",
        "peekOfCode": "class ContactsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contacts'",
        "detail": "backend.contacts.apps",
        "documentation": {}
    },
    {
        "label": "Contact",
        "kind": 6,
        "importPath": "backend.contacts.models",
        "description": "backend.contacts.models",
        "peekOfCode": "class Contact(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    phone = models.CharField(max_length=20, blank=True)\n    email = models.CharField(max_length=255, blank=True)\n    notes = models.TextField(blank=True)\n    def __str__(self):\n        return self.name",
        "detail": "backend.contacts.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.dates.migrations.0001_initial",
        "description": "backend.dates.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('tours', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Date',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "backend.dates.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.dates.migrations.0002_alter_date_tour",
        "description": "backend.dates.migrations.0002_alter_date_tour",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0002_alter_tour_notes'),\n        ('dates', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='date',\n            name='tour',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourdates', to='tours.tour'),",
        "detail": "backend.dates.migrations.0002_alter_date_tour",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.dates.migrations.0003_alter_date_location_alter_date_notes_and_more",
        "description": "backend.dates.migrations.0003_alter_date_location_alter_date_notes_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('dates', '0002_alter_date_tour'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='date',\n            name='location',\n            field=models.TextField(blank=True, default=''),\n        ),",
        "detail": "backend.dates.migrations.0003_alter_date_location_alter_date_notes_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.dates.migrations.0004_remove_date_is_confirmed_date_place_id_and_more",
        "description": "backend.dates.migrations.0004_remove_date_is_confirmed_date_place_id_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"dates\", \"0003_alter_date_location_alter_date_notes_and_more\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"date\",\n            name=\"is_confirmed\",\n        ),\n        migrations.AddField(",
        "detail": "backend.dates.migrations.0004_remove_date_is_confirmed_date_place_id_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.dates.migrations.0005_statustype_prospect",
        "description": "backend.dates.migrations.0005_statustype_prospect",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"venues\", \"0001_initial\"),\n        (\"dates\", \"0004_remove_date_is_confirmed_date_place_id_and_more\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"StatusType\",\n            fields=[\n                (",
        "detail": "backend.dates.migrations.0005_statustype_prospect",
        "documentation": {}
    },
    {
        "label": "DatesConfig",
        "kind": 6,
        "importPath": "backend.dates.apps",
        "description": "backend.dates.apps",
        "peekOfCode": "class DatesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'dates'",
        "detail": "backend.dates.apps",
        "documentation": {}
    },
    {
        "label": "Date",
        "kind": 6,
        "importPath": "backend.dates.models",
        "description": "backend.dates.models",
        "peekOfCode": "class Date(UUIDModel):\n    date = models.DateField()\n    place_id = models.CharField(max_length=255, blank=True)\n    location = models.CharField(max_length=255, blank=True)\n    notes = models.TextField(blank=True)\n    deal = models.TextField(blank=True)\n    title = models.CharField(max_length=255, blank=True)\n    is_show_day = models.BooleanField(default=False)\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"tourdates\")\n    prospects = models.ManyToManyField(",
        "detail": "backend.dates.models",
        "documentation": {}
    },
    {
        "label": "StatusType",
        "kind": 6,
        "importPath": "backend.dates.models",
        "description": "backend.dates.models",
        "peekOfCode": "class StatusType(models.Model):\n    name = models.CharField(max_length=255)\n    def __str__(self):\n        return self.name\nclass Prospect(UUIDModel):\n    notes = models.TextField(blank=True)\n    status = models.ForeignKey(StatusType, on_delete=models.PROTECT)\n    date = models.ForeignKey(Date, on_delete=models.CASCADE)\n    venue = models.ForeignKey(\"venues.Venue\", on_delete=models.CASCADE)",
        "detail": "backend.dates.models",
        "documentation": {}
    },
    {
        "label": "Prospect",
        "kind": 6,
        "importPath": "backend.dates.models",
        "description": "backend.dates.models",
        "peekOfCode": "class Prospect(UUIDModel):\n    notes = models.TextField(blank=True)\n    status = models.ForeignKey(StatusType, on_delete=models.PROTECT)\n    date = models.ForeignKey(Date, on_delete=models.CASCADE)\n    venue = models.ForeignKey(\"venues.Venue\", on_delete=models.CASCADE)",
        "detail": "backend.dates.models",
        "documentation": {}
    },
    {
        "label": "DateSerializer",
        "kind": 6,
        "importPath": "backend.dates.serializers",
        "description": "backend.dates.serializers",
        "peekOfCode": "class DateSerializer(serializers.ModelSerializer):\n    @staticmethod\n    def create_or_update(dates, tour_id):\n        for date_data in dates:\n            date, created = Date.objects.get_or_create(tour_id=tour_id, date=date_data['date'])\n            date.save(*date_data)\n    timeslots = serializers.SerializerMethodField()\n    def get_timeslots(self, date):\n        return TimeslotSerializer(date.schedule.all().order_by('start_time'), many=True).data\n    class Meta:",
        "detail": "backend.dates.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.dates.urls",
        "description": "backend.dates.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.tour_dates),\n    path('<str:date_id>/', views.tour_date_detail),\n    path('<str:date_id>/timeslots/', include('timeslots.urls')),\n]",
        "detail": "backend.dates.urls",
        "documentation": {}
    },
    {
        "label": "tour_dates",
        "kind": 2,
        "importPath": "backend.dates.views",
        "description": "backend.dates.views",
        "peekOfCode": "def tour_dates(req, band_id, tour_id):\n    if req.method == GET:\n        dates = Date.objects.filter(tour_id=tour_id)\n        ser = DateSerializer(dates, many=True)\n        return Response(ser.data, status=status.HTTP_200_OK)\n    elif req.method == POST:\n        ser = DateSerializer(data=req.data)\n        return ser.create_date(req, tour_id)\n@api_view([GET, PATCH, DELETE])\n@permission_classes([IsAuthenticated])    ",
        "detail": "backend.dates.views",
        "documentation": {}
    },
    {
        "label": "tour_date_detail",
        "kind": 2,
        "importPath": "backend.dates.views",
        "description": "backend.dates.views",
        "peekOfCode": "def tour_date_detail(req, band_id, tour_id, date_id):\n    date = get_object_or_404(Date, id=date_id)\n    if req.method == GET:\n        ser = DateSerializer(date)\n        return Response(ser.data, status=status.HTTP_200_OK)\n    elif req.method == PATCH:\n        ser = DateSerializer(date, data=req.data, partial=True)\n        return ser.update_date(req)\n    elif req.method == DELETE:\n        date.delete()",
        "detail": "backend.dates.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.asgi",
        "description": "backend.drf_jwt_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.drf_jwt_backend.asgi",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-$-*c5gei%cikbqw&1eqj$7_%c3npk^^7xp#_x(8oc$zy(j3wus'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'mysql.connector.django',\n        'NAME': 'indietour',\n        'USER': 'root',\n        'PASSWORD': 'boastedBeast14!',\n        'HOST': '127.0.0.1',",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'mysql.connector.django',\n        'NAME': 'indietour',\n        'USER': 'root',\n        'PASSWORD': 'boastedBeast14!',\n        'HOST': '127.0.0.1',\n        'PORT': '3306',\n        'OPTIONS': {\n            'autocommit': True",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = 'indietour.app@gmail.com'\nEMAIL_HOST_PASSWORD = 'fxfuftjqcrrntiur'",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = 'indietour.app@gmail.com'\nEMAIL_HOST_PASSWORD = 'fxfuftjqcrrntiur'",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = 'indietour.app@gmail.com'\nEMAIL_HOST_PASSWORD = 'fxfuftjqcrrntiur'",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_HOST_USER = 'indietour.app@gmail.com'\nEMAIL_HOST_PASSWORD = 'fxfuftjqcrrntiur'",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "EMAIL_HOST_USER = 'indietour.app@gmail.com'\nEMAIL_HOST_PASSWORD = 'fxfuftjqcrrntiur'",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.local_settings",
        "description": "backend.drf_jwt_backend.local_settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'fxfuftjqcrrntiur'",
        "detail": "backend.drf_jwt_backend.local_settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'authentication.apps.AuthenticationConfig',\n    'corsheaders',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n]",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\nROOT_URLCONF = 'drf_jwt_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'drf_jwt_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'drf_jwt_backend.wsgi.application'\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': 'devCodeCamp',",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.settings",
        "description": "backend.drf_jwt_backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': 'devCodeCamp',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,",
        "detail": "backend.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.urls",
        "description": "backend.drf_jwt_backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/auth/', include('authentication.urls')),\n    path('api/bands/', include('bands.urls')),\n    path('gapi/', include('proxy.urls'))\n]",
        "detail": "backend.drf_jwt_backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.drf_jwt_backend.wsgi",
        "description": "backend.drf_jwt_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.drf_jwt_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "ProxyConfig",
        "kind": 6,
        "importPath": "backend.proxy.apps",
        "description": "backend.proxy.apps",
        "peekOfCode": "class ProxyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'proxy'",
        "detail": "backend.proxy.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.proxy.urls",
        "description": "backend.proxy.urls",
        "peekOfCode": "urlpatterns = [\n    path('places/', views.places),\n    path('places/autocomplete/', views.autocomplete),\n]",
        "detail": "backend.proxy.urls",
        "documentation": {}
    },
    {
        "label": "autocomplete",
        "kind": 2,
        "importPath": "backend.proxy.views",
        "description": "backend.proxy.views",
        "peekOfCode": "def autocomplete(req):\n    places_endpoint = 'https://maps.googleapis.com/maps/api/place'\n    key = req.query_params.get('key')\n    query = req.query_params.get('query')\n    response = requests.get(f'{places_endpoint}/autocomplete/json?key={key}&input={query}')\n    return Response(response.json())\n@api_view([GET])\n@permission_classes([IsAuthenticated])\ndef places(req):\n    places_endpoint = 'https://maps.googleapis.com/maps/api/place'",
        "detail": "backend.proxy.views",
        "documentation": {}
    },
    {
        "label": "places",
        "kind": 2,
        "importPath": "backend.proxy.views",
        "description": "backend.proxy.views",
        "peekOfCode": "def places(req):\n    places_endpoint = 'https://maps.googleapis.com/maps/api/place'\n    key = req.query_params.get('key')\n    input = req.query_params.get('input')\n    response = requests.get(f'{places_endpoint}/findplacefromtext/json?key={key}&inputtype=textquery&input={input}&fields=formatted_address%2Cgeometry%2Cname')\n    return Response(response.json())",
        "detail": "backend.proxy.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.timeslots.migrations.0001_initial",
        "description": "backend.timeslots.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('dates', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='TimeslotType',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "backend.timeslots.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.timeslots.migrations.0002_alter_timeslot_date_alter_timeslot_description_and_more",
        "description": "backend.timeslots.migrations.0002_alter_timeslot_date_alter_timeslot_description_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('dates', '0003_alter_date_location_alter_date_notes_and_more'),\n        ('timeslots', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='timeslot',\n            name='date',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='schedule', to='dates.date'),",
        "detail": "backend.timeslots.migrations.0002_alter_timeslot_date_alter_timeslot_description_and_more",
        "documentation": {}
    },
    {
        "label": "TimeslotsConfig",
        "kind": 6,
        "importPath": "backend.timeslots.apps",
        "description": "backend.timeslots.apps",
        "peekOfCode": "class TimeslotsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'timeslots'",
        "detail": "backend.timeslots.apps",
        "documentation": {}
    },
    {
        "label": "TimeslotType",
        "kind": 6,
        "importPath": "backend.timeslots.models",
        "description": "backend.timeslots.models",
        "peekOfCode": "class TimeslotType(Model):\n    id = UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n    name = CharField(max_length=255, unique=True)\nclass Timeslot(Model):\n    id = UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n    date = ForeignKey(Date, on_delete=DO_NOTHING, related_name='schedule')\n    description = TextField(default='', blank=True)\n    start_time = TimeField()\n    end_time = TimeField(null=True, blank=True)\n    start_location = TextField(default='', blank=True)",
        "detail": "backend.timeslots.models",
        "documentation": {}
    },
    {
        "label": "Timeslot",
        "kind": 6,
        "importPath": "backend.timeslots.models",
        "description": "backend.timeslots.models",
        "peekOfCode": "class Timeslot(Model):\n    id = UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n    date = ForeignKey(Date, on_delete=DO_NOTHING, related_name='schedule')\n    description = TextField(default='', blank=True)\n    start_time = TimeField()\n    end_time = TimeField(null=True, blank=True)\n    start_location = TextField(default='', blank=True)\n    end_location = TextField(default='', blank=True)\n    type = ForeignKey(TimeslotType, on_delete=DO_NOTHING,null=True, blank=True)\n    after_midnight = BooleanField(default=False)",
        "detail": "backend.timeslots.models",
        "documentation": {}
    },
    {
        "label": "TimeslotSerializer",
        "kind": 6,
        "importPath": "backend.timeslots.serializers",
        "description": "backend.timeslots.serializers",
        "peekOfCode": "class TimeslotSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Timeslot\n        fields = ['id', 'description', 'start_time', 'end_time', 'start_location', 'end_location', 'type', 'after_midnight']\n    type = serializers.SerializerMethodField()\n    def get_type(self, timeslot):\n        return timeslot.type.name if timeslot.type else None\n    def create_timeslot(self, req, date_id):\n        self.is_valid(raise_exception=True)\n        self.save(date_id=date_id)",
        "detail": "backend.timeslots.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.timeslots.urls",
        "description": "backend.timeslots.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.date_schedule),\n    path('types/', views.timeslot_types),\n    path('<str:timeslot_id>/', views.timeslot_detail),\n]",
        "detail": "backend.timeslots.urls",
        "documentation": {}
    },
    {
        "label": "date_schedule",
        "kind": 2,
        "importPath": "backend.timeslots.views",
        "description": "backend.timeslots.views",
        "peekOfCode": "def date_schedule(req, band_id, tour_id, date_id):\n    if req.method == GET:\n        timeslots = Timeslot.objects.filter(date_id=date_id)\n        ser = TimeslotSerializer(timeslots, many=True)\n        return Response(ser.data, status=status.HTTP_200_OK)\n    elif req.method == POST:\n        ser = TimeslotSerializer(data=req.data)\n        return ser.create_timeslot(req, date_id)\n@api_view([GET, PUT, DELETE])\n@permission_classes([IsAuthenticated])    ",
        "detail": "backend.timeslots.views",
        "documentation": {}
    },
    {
        "label": "timeslot_detail",
        "kind": 2,
        "importPath": "backend.timeslots.views",
        "description": "backend.timeslots.views",
        "peekOfCode": "def timeslot_detail(req, band_id, tour_id, date_id, timeslot_id):\n    timeslot = get_object_or_404(Timeslot, id=timeslot_id)\n    if req.method == GET:\n        ser = TimeslotSerializer(timeslot)\n        return Response(ser.data, status=status.HTTP_200_OK)\n    elif req.method == PUT:\n        ser = TimeslotSerializer(timeslot, data=req.data)\n        return ser.update_timeslot(req)\n    elif req.method == DELETE:\n        timeslot.delete()",
        "detail": "backend.timeslots.views",
        "documentation": {}
    },
    {
        "label": "timeslot_types",
        "kind": 2,
        "importPath": "backend.timeslots.views",
        "description": "backend.timeslots.views",
        "peekOfCode": "def timeslot_types(req, band_id, tour_id, date_id):\n    if req.method == GET:\n        types = TimeslotType.objects.all()\n        names = [type.name for type in types]\n        print(names)\n        return Response(names)\n    elif req.method == POST:\n        new_type = TimeslotType.objects.create(name=req.data)\n        return Response(new_type.name)",
        "detail": "backend.timeslots.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.tours.migrations.0001_initial",
        "description": "backend.tours.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('bands', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tour',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "backend.tours.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.tours.migrations.0002_alter_tour_notes",
        "description": "backend.tours.migrations.0002_alter_tour_notes",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='tour',\n            name='notes',\n            field=models.TextField(blank=True, default=''),\n        ),",
        "detail": "backend.tours.migrations.0002_alter_tour_notes",
        "documentation": {}
    },
    {
        "label": "ToursConfig",
        "kind": 6,
        "importPath": "backend.tours.apps",
        "description": "backend.tours.apps",
        "peekOfCode": "class ToursConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tours'",
        "detail": "backend.tours.apps",
        "documentation": {}
    },
    {
        "label": "Tour",
        "kind": 6,
        "importPath": "backend.tours.models",
        "description": "backend.tours.models",
        "peekOfCode": "class Tour(Model):\n  id = UUIDField(primary_key=True, default= uuid.uuid4, editable=False)\n  name = CharField(max_length=255, error_messages={'unique': \"Name must be unique.\"})\n  band = ForeignKey(Band, on_delete=CASCADE)\n  notes = TextField(blank=True, default='')\n  users = ManyToManyField(BandUser, blank=True)\n  is_archived = BooleanField(default=False)",
        "detail": "backend.tours.models",
        "documentation": {}
    },
    {
        "label": "TourUserSerializer",
        "kind": 6,
        "importPath": "backend.tours.serializers",
        "description": "backend.tours.serializers",
        "peekOfCode": "class TourUserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = BandUser\n        fields = ['id', 'user', \"is_admin\"]\nclass TourSerializer(serializers.ModelSerializer):\n    dates = serializers.SerializerMethodField()\n    users = BandUserSerializer(many=True, read_only=True)\n    class Meta:\n        model = Tour\n        fields = ['id', 'name', 'notes', 'is_archived', 'users', 'dates', 'band_id']",
        "detail": "backend.tours.serializers",
        "documentation": {}
    },
    {
        "label": "TourSerializer",
        "kind": 6,
        "importPath": "backend.tours.serializers",
        "description": "backend.tours.serializers",
        "peekOfCode": "class TourSerializer(serializers.ModelSerializer):\n    dates = serializers.SerializerMethodField()\n    users = BandUserSerializer(many=True, read_only=True)\n    class Meta:\n        model = Tour\n        fields = ['id', 'name', 'notes', 'is_archived', 'users', 'dates', 'band_id']\n        depth = 1\n    def has_valid_name(self, band_id):\n        name = self.validated_data.get('name', False)\n        if name:",
        "detail": "backend.tours.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.tours.urls",
        "description": "backend.tours.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.band_tours),\n    path('active/', views.get_active_tour),\n    path('<str:tour_id>/', views.tour_detail),\n    path('<str:tour_id>/users/', views.touruser_table),\n    path('<str:tour_id>/users/<str:banduser_id>/', views.touruser_detail),\n    path('<str:tour_id>/active/', views.set_active_tour),\n    path('<str:tour_id>/dates/', include('dates.urls')),\n]",
        "detail": "backend.tours.urls",
        "documentation": {}
    },
    {
        "label": "band_tours",
        "kind": 2,
        "importPath": "backend.tours.views",
        "description": "backend.tours.views",
        "peekOfCode": "def band_tours(req, band_id):\n    if req.method == GET:\n        tours = Tour.objects.filter(band_id=band_id)\n        ser = TourSerializer(tours, many=True)\n        return Response(data=ser.data, status=status.HTTP_200_OK)\n    elif req.method == POST:\n        ser = TourSerializer(data=req.data)\n        return ser.create_or_update(req, band_id)\n@api_view([GET, PUT, PATCH, DELETE])\n@permission_classes([IsAuthenticated])",
        "detail": "backend.tours.views",
        "documentation": {}
    },
    {
        "label": "tour_detail",
        "kind": 2,
        "importPath": "backend.tours.views",
        "description": "backend.tours.views",
        "peekOfCode": "def tour_detail(req, band_id, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if req.method == GET:\n        ser = TourSerializer(tour)\n        return Response(ser.data, status=status.HTTP_200_OK)\n    elif req.method == PUT:\n        ser = TourSerializer(tour, data=req.data)\n        return ser.create_or_update(req)\n    elif req.method == PATCH:\n        ser = TourSerializer(tour, data=req.data, partial=True)",
        "detail": "backend.tours.views",
        "documentation": {}
    },
    {
        "label": "set_active_tour",
        "kind": 2,
        "importPath": "backend.tours.views",
        "description": "backend.tours.views",
        "peekOfCode": "def set_active_tour(req, band_id, tour_id):\n    user = get_object_or_404(User, id=req.user.id)\n    tour = get_object_or_404(Tour, id=tour_id)\n    user.active_tour = tour\n    user.save()\n    ser = TourSerializer(tour)\n    return Response(ser.data, status=status.HTTP_200_OK)\n@api_view([GET])\n@permission_classes([IsAuthenticated])\ndef get_active_tour(req, band_id):",
        "detail": "backend.tours.views",
        "documentation": {}
    },
    {
        "label": "get_active_tour",
        "kind": 2,
        "importPath": "backend.tours.views",
        "description": "backend.tours.views",
        "peekOfCode": "def get_active_tour(req, band_id):\n    user = get_object_or_404(User, id=req.user.id)\n    data = TourSerializer(user.active_tour).data if user.active_tour else None\n    return Response(data, status=status.HTTP_200_OK)\n# TOUR USERS\n@api_view([GET, POST])\n@permission_classes([IsAuthenticated])\ndef touruser_table(req, band_id, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if req.method == GET:",
        "detail": "backend.tours.views",
        "documentation": {}
    },
    {
        "label": "touruser_table",
        "kind": 2,
        "importPath": "backend.tours.views",
        "description": "backend.tours.views",
        "peekOfCode": "def touruser_table(req, band_id, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if req.method == GET:\n        tourusers = tour.users.all()\n        print(tourusers)\n        ser = BandUserSerializer(tourusers, many=True)\n        return Response(ser.data, status=status.HTTP_200_OK)\n    elif req.method == POST:\n        tourusers = BandUserSerializer.create_or_update([req.data], band_id)\n        tour.users.add(*tourusers)",
        "detail": "backend.tours.views",
        "documentation": {}
    },
    {
        "label": "touruser_detail",
        "kind": 2,
        "importPath": "backend.tours.views",
        "description": "backend.tours.views",
        "peekOfCode": "def touruser_detail(req, band_id, tour_id, banduser_id):\n    tour = get_object_or_404(Tour, band_id=band_id, id=tour_id)\n    touruser = tour.users.get(id=banduser_id)\n    # if req.method == PATCH:\n    #     ser = BandUserSerializer(touruser, data=req.data, partial=True)\n    #     ser.is_valid(raise_exception=True)\n    #     ser.save()\n    #     return Response(ser.data, status=status.HTTP_200_OK)\n    if req.method == DELETE:\n        tour.users.remove(touruser)",
        "detail": "backend.tours.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.venues.migrations.0001_initial",
        "description": "backend.venues.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Venue\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "backend.venues.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "VenuesConfig",
        "kind": 6,
        "importPath": "backend.venues.apps",
        "description": "backend.venues.apps",
        "peekOfCode": "class VenuesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'venues'",
        "detail": "backend.venues.apps",
        "documentation": {}
    },
    {
        "label": "Venue",
        "kind": 6,
        "importPath": "backend.venues.models",
        "description": "backend.venues.models",
        "peekOfCode": "class Venue(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    place_id = models.CharField(max_length=255)\n    formatted_address = models.TextField()\n    lat = models.DecimalField(max_digits=9, decimal_places=6)\n    lng = models.DecimalField(max_digits=9, decimal_places=6)\n    def __str__(self):\n        return self.name",
        "detail": "backend.venues.models",
        "documentation": {}
    },
    {
        "label": "VenueSerializer",
        "kind": 6,
        "importPath": "backend.venues.serializers",
        "description": "backend.venues.serializers",
        "peekOfCode": "class VenueSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Venue\n        fields = [\"id\", \"name\", \"place_id\", \"formatted_address\", \"lat\", \"lng\"]",
        "detail": "backend.venues.serializers",
        "documentation": {}
    },
    {
        "label": "GET",
        "kind": 5,
        "importPath": "backend.constants",
        "description": "backend.constants",
        "peekOfCode": "GET = 'GET'\nPOST = 'POST'\nPUT = 'PUT'\nPATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend.constants",
        "documentation": {}
    },
    {
        "label": "POST",
        "kind": 5,
        "importPath": "backend.constants",
        "description": "backend.constants",
        "peekOfCode": "POST = 'POST'\nPUT = 'PUT'\nPATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend.constants",
        "documentation": {}
    },
    {
        "label": "PUT",
        "kind": 5,
        "importPath": "backend.constants",
        "description": "backend.constants",
        "peekOfCode": "PUT = 'PUT'\nPATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend.constants",
        "documentation": {}
    },
    {
        "label": "PATCH",
        "kind": 5,
        "importPath": "backend.constants",
        "description": "backend.constants",
        "peekOfCode": "PATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend.constants",
        "documentation": {}
    },
    {
        "label": "DELETE",
        "kind": 5,
        "importPath": "backend.constants",
        "description": "backend.constants",
        "peekOfCode": "DELETE = 'DELETE'",
        "detail": "backend.constants",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE',\n                          'drf_jwt_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "UUIDModel",
        "kind": 6,
        "importPath": "backend.uuid_model",
        "description": "backend.uuid_model",
        "peekOfCode": "class UUIDModel(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    class Meta:\n        abstract = True",
        "detail": "backend.uuid_model",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.authentication.migrations.0001_initial",
        "description": "backend_old.authentication.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend_old.authentication.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.authentication.migrations.0002_user_active_band_id_user_active_tour_id",
        "description": "backend_old.authentication.migrations.0002_user_active_band_id_user_active_tour_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('authentication', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='active_band_id',\n            field=models.IntegerField(null=True),\n        ),",
        "detail": "backend_old.authentication.migrations.0002_user_active_band_id_user_active_tour_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.authentication.migrations.0003_remove_user_username_alter_user_email",
        "description": "backend_old.authentication.migrations.0003_remove_user_username_alter_user_email",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('authentication', '0002_user_active_band_id_user_active_tour_id'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='username',\n        ),\n        migrations.AlterField(",
        "detail": "backend_old.authentication.migrations.0003_remove_user_username_alter_user_email",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.authentication.migrations.0004_user_username",
        "description": "backend_old.authentication.migrations.0004_user_username",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('authentication', '0003_remove_user_username_alter_user_email'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='username',\n            field=models.CharField(default='dan', max_length=255),\n            preserve_default=False,",
        "detail": "backend_old.authentication.migrations.0004_user_username",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.authentication.migrations.0005_remove_user_first_name_remove_user_last_name",
        "description": "backend_old.authentication.migrations.0005_remove_user_first_name_remove_user_last_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('authentication', '0004_user_username'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='first_name',\n        ),\n        migrations.RemoveField(",
        "detail": "backend_old.authentication.migrations.0005_remove_user_first_name_remove_user_last_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.authentication.migrations.0006_user_first_name_user_last_name",
        "description": "backend_old.authentication.migrations.0006_user_first_name_user_last_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('authentication', '0005_remove_user_first_name_remove_user_last_name'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='first_name',\n            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),\n        ),",
        "detail": "backend_old.authentication.migrations.0006_user_first_name_user_last_name",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "backend_old.authentication.admin",
        "description": "backend_old.authentication.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    pass\n# Register your models here.\nadmin.site.register(User)",
        "detail": "backend_old.authentication.admin",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "backend_old.authentication.apps",
        "description": "backend_old.authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authentication'",
        "detail": "backend_old.authentication.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend_old.authentication.models",
        "description": "backend_old.authentication.models",
        "peekOfCode": "class User(AbstractUser):\n    username = models.CharField(max_length=255)\n    email = models.EmailField(unique=True)\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['password', 'username']\n    active_band = models.IntegerField(null=True)\n    active_tour = models.IntegerField(null=True)\n    '''\n    This is a custom version of the built in User class\n    It contains all of the built in fields and functionality of the standard User",
        "detail": "backend_old.authentication.models",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "kind": 6,
        "importPath": "backend_old.authentication.serializers",
        "description": "backend_old.authentication.serializers",
        "peekOfCode": "class MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)\n        # for any additional fields you'd like to add to the JWT sent back in response\n        # add below using the token[\"field name\"] = user.name_of_property\n        # token[\"is_student\"] = user.is_student\n        token[\"username\"] = user.username\n        token[\"email\"] = user.email\n        # token['active_band_id'] = user.active_band_id",
        "detail": "backend_old.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "RegistrationSerializer",
        "kind": 6,
        "importPath": "backend_old.authentication.serializers",
        "description": "backend_old.authentication.serializers",
        "peekOfCode": "class RegistrationSerializer(serializers.ModelSerializer):\n    email = serializers.EmailField(required=True, validators=[\n                                   UniqueValidator(queryset=User.objects.all())])\n    password = serializers.CharField(\n        write_only=True, required=True, validators=[validate_password])\n    class Meta:\n        model = User\n        # If added new columns through the User model, add them in the fields\n        # list as seen below\n        fields = ( 'password', 'email', 'username', 'active_band_id', 'active_tour_id')",
        "detail": "backend_old.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend_old.authentication.serializers",
        "description": "backend_old.authentication.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'active_band_id', 'active_tour_id']\nclass UserSettingsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['active_band_id', 'active_tour_id']",
        "detail": "backend_old.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "UserSettingsSerializer",
        "kind": 6,
        "importPath": "backend_old.authentication.serializers",
        "description": "backend_old.authentication.serializers",
        "peekOfCode": "class UserSettingsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['active_band_id', 'active_tour_id']",
        "detail": "backend_old.authentication.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_old.authentication.urls",
        "description": "backend_old.authentication.urls",
        "peekOfCode": "urlpatterns = [\n    path('login/', MyTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('login/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('register/', RegisterView.as_view(), name='register'),\n    path('settings/', user_settings)\n]",
        "detail": "backend_old.authentication.urls",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairView",
        "kind": 6,
        "importPath": "backend_old.authentication.views",
        "description": "backend_old.authentication.views",
        "peekOfCode": "class MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer\nclass RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegistrationSerializer\nclass EditUserView(TokenRefreshView):\n    permission_classes = (IsAuthenticated,)\n    authentication_classes = [JWTAuthentication]\n    def post(self, request):",
        "detail": "backend_old.authentication.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "backend_old.authentication.views",
        "description": "backend_old.authentication.views",
        "peekOfCode": "class RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegistrationSerializer\nclass EditUserView(TokenRefreshView):\n    permission_classes = (IsAuthenticated,)\n    authentication_classes = [JWTAuthentication]\n    def post(self, request):\n        user = get_object_or_404(User, id=request.user.id)\n        serializer = UserSerializer(user, data=request.data, partial=True)",
        "detail": "backend_old.authentication.views",
        "documentation": {}
    },
    {
        "label": "EditUserView",
        "kind": 6,
        "importPath": "backend_old.authentication.views",
        "description": "backend_old.authentication.views",
        "peekOfCode": "class EditUserView(TokenRefreshView):\n    permission_classes = (IsAuthenticated,)\n    authentication_classes = [JWTAuthentication]\n    def post(self, request):\n        user = get_object_or_404(User, id=request.user.id)\n        serializer = UserSerializer(user, data=request.data, partial=True)\n        if serializer.is_valid():\n            serializer.save()\n            token = MyTokenObtainPairSerializer.get_token(user)\n            request = HttpRequest()",
        "detail": "backend_old.authentication.views",
        "documentation": {}
    },
    {
        "label": "user_settings",
        "kind": 2,
        "importPath": "backend_old.authentication.views",
        "description": "backend_old.authentication.views",
        "peekOfCode": "def user_settings(request):\n    user = get_object_or_404(User, id=request.user.id)\n    if request.method == GET:\n        serializer = UserSettingsSerializer(user)\n        return Response(data=serializer.data, status=status.HTTP_200_OK)    \n    if request.method == PUT:\n        serializer = UserSettingsSerializer(user, data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(data=serializer.data, status=status.HTTP_200_OK)",
        "detail": "backend_old.authentication.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend_old.authentication.views",
        "description": "backend_old.authentication.views",
        "peekOfCode": "User = get_user_model()\nclass MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer\nclass RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegistrationSerializer\nclass EditUserView(TokenRefreshView):\n    permission_classes = (IsAuthenticated,)\n    authentication_classes = [JWTAuthentication]",
        "detail": "backend_old.authentication.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.bands.migrations.0001_initial",
        "description": "backend_old.bands.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Band',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend_old.bands.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.bands.migrations.0002_banduser_remove_band_admins_remove_band_owner_and_more",
        "description": "backend_old.bands.migrations.0002_banduser_remove_band_admins_remove_band_owner_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('authentication', '0002_user_active_band_id_user_active_tour_id'),\n        ('bands', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='BandUser',\n            fields=[",
        "detail": "backend_old.bands.migrations.0002_banduser_remove_band_admins_remove_band_owner_and_more",
        "documentation": {}
    },
    {
        "label": "BandsConfig",
        "kind": 6,
        "importPath": "backend_old.bands.apps",
        "description": "backend_old.bands.apps",
        "peekOfCode": "class BandsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'bands'",
        "detail": "backend_old.bands.apps",
        "documentation": {}
    },
    {
        "label": "Band",
        "kind": 6,
        "importPath": "backend_old.bands.models",
        "description": "backend_old.bands.models",
        "peekOfCode": "class Band(Model):\n  name = CharField(max_length=255, unique=True)\n  users = ManyToManyField(User, through='BandUser')\n  is_archived = BooleanField(default=False)\n  def __str__(self) -> str:\n    return self.name\nclass BandUser(Model):\n  band = ForeignKey(Band, on_delete=CASCADE)\n  user = ForeignKey(User, on_delete=CASCADE)\n  is_admin = BooleanField(default=False)",
        "detail": "backend_old.bands.models",
        "documentation": {}
    },
    {
        "label": "BandUser",
        "kind": 6,
        "importPath": "backend_old.bands.models",
        "description": "backend_old.bands.models",
        "peekOfCode": "class BandUser(Model):\n  band = ForeignKey(Band, on_delete=CASCADE)\n  user = ForeignKey(User, on_delete=CASCADE)\n  is_admin = BooleanField(default=False)\n  is_owner = BooleanField(default=False)\n  def __str__(self) -> str:\n    return f'{self.user.email} ({self.band})'\nclass BandUserInline(admin.TabularInline):\n  model = BandUser\n  extra = 1",
        "detail": "backend_old.bands.models",
        "documentation": {}
    },
    {
        "label": "BandUserInline",
        "kind": 6,
        "importPath": "backend_old.bands.models",
        "description": "backend_old.bands.models",
        "peekOfCode": "class BandUserInline(admin.TabularInline):\n  model = BandUser\n  extra = 1\nclass BandAdmin(admin.ModelAdmin):\n  inlines = [BandUserInline]",
        "detail": "backend_old.bands.models",
        "documentation": {}
    },
    {
        "label": "BandAdmin",
        "kind": 6,
        "importPath": "backend_old.bands.models",
        "description": "backend_old.bands.models",
        "peekOfCode": "class BandAdmin(admin.ModelAdmin):\n  inlines = [BandUserInline]",
        "detail": "backend_old.bands.models",
        "documentation": {}
    },
    {
        "label": "BandPermission",
        "kind": 6,
        "importPath": "backend_old.bands.permissions",
        "description": "backend_old.bands.permissions",
        "peekOfCode": "class BandPermission(BasePermission):\n  SAFE_METHODS = [GET]\n  user_id = None\n  band_id = None\n  band_user = None\n  def has_permission(self, request, view):\n    self.user_id = request.user.id\n    self.band_id = view.kwargs.get('band_id', None)\n    try:\n      self.band_user = BandUser.objects.get(user_id=self.user_id, band_id=self.band_id)",
        "detail": "backend_old.bands.permissions",
        "documentation": {}
    },
    {
        "label": "IsBandUser",
        "kind": 6,
        "importPath": "backend_old.bands.permissions",
        "description": "backend_old.bands.permissions",
        "peekOfCode": "class IsBandUser(BandPermission):\n  def has_permission(self, request, view):\n    if super().has_permission(request, view):\n      if request.method in self.SAFE_METHODS:\n        return True\n      return self.band_user.is_admin\n    return False",
        "detail": "backend_old.bands.permissions",
        "documentation": {}
    },
    {
        "label": "BandUserSerializer",
        "kind": 6,
        "importPath": "backend_old.bands.serializers",
        "description": "backend_old.bands.serializers",
        "peekOfCode": "class BandUserSerializer(serializers.ModelSerializer):\n  email = serializers.SerializerMethodField()\n  username = serializers.SerializerMethodField()\n  def get_email(self, band_user):\n    return band_user.user.email\n  def get_username(self, band_user):\n    return band_user.user.username\n  class Meta:\n    model = BandUser\n    fields = ['user_id', 'email', 'username', 'is_admin', 'is_owner']",
        "detail": "backend_old.bands.serializers",
        "documentation": {}
    },
    {
        "label": "BandSerializer",
        "kind": 6,
        "importPath": "backend_old.bands.serializers",
        "description": "backend_old.bands.serializers",
        "peekOfCode": "class BandSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = Band\n    fields = ['id', 'name', 'users', 'tours', 'archived_tours']\n    depth = 1\n  tours = serializers.SerializerMethodField()\n  archived_tours = serializers.SerializerMethodField()\n  users = serializers.SerializerMethodField()\n  def get_tours(self, band):\n    band_tours = Tour.objects.filter(band_id=band.id, is_archived=False)",
        "detail": "backend_old.bands.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_old.bands.urls",
        "description": "backend_old.bands.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.user_bands),\n    path('<int:band_id>/', views.band_details),\n    path('active/', views.get_active_band),\n    path('<int:band_id>/active/', views.set_active_band),\n    path('<int:band_id>/tours/', include('tours.tours.urls')),\n]",
        "detail": "backend_old.bands.urls",
        "documentation": {}
    },
    {
        "label": "user_bands",
        "kind": 2,
        "importPath": "backend_old.bands.views",
        "description": "backend_old.bands.views",
        "peekOfCode": "def user_bands(request):\n  user = get_object_or_404(User, id=request.user.id)\n  if request.method == GET:\n    band_users = Band.objects.filter(banduser__user_id=user.id)\n    serializer = BandSerializer(band_users, many=True)\n    return Response(serializer.data)\n  elif request.method == POST:\n    serializer = BandSerializer(data=request.data)\n    return serializer.create_band(request)\n@api_view([GET, PUT, DELETE])",
        "detail": "backend_old.bands.views",
        "documentation": {}
    },
    {
        "label": "band_details",
        "kind": 2,
        "importPath": "backend_old.bands.views",
        "description": "backend_old.bands.views",
        "peekOfCode": "def band_details(request, band_id):\n  band = get_object_or_404(Band, id=band_id)\n  if request.method == GET:\n    serializer = BandSerializer(band)\n    return Response(serializer.data)\n  elif request.method == PUT:\n    serializer = BandSerializer(band, data=request.data)\n    return serializer.update_band(request)\n  elif request.method == DELETE:\n    serializer = BandSerializer(band)",
        "detail": "backend_old.bands.views",
        "documentation": {}
    },
    {
        "label": "get_active_band",
        "kind": 2,
        "importPath": "backend_old.bands.views",
        "description": "backend_old.bands.views",
        "peekOfCode": "def get_active_band(request):\n  user = get_object_or_404(User, id=request.user.id)\n  band = get_object_or_404(Band, id=user.active_band_id)\n  serializer = BandSerializer(band)\n  return Response(serializer.data)\n@api_view([POST])\n@permission_classes([IsAuthenticated, IsBandUser])\ndef set_active_band(request, band_id):\n  user = get_object_or_404(User, id=request.user.id)\n  user.set_active_band(band_id)",
        "detail": "backend_old.bands.views",
        "documentation": {}
    },
    {
        "label": "set_active_band",
        "kind": 2,
        "importPath": "backend_old.bands.views",
        "description": "backend_old.bands.views",
        "peekOfCode": "def set_active_band(request, band_id):\n  user = get_object_or_404(User, id=request.user.id)\n  user.set_active_band(band_id)\n  user.set_active_tour(None)\n  band = get_object_or_404(Band, id=band_id)\n  serializer = BandSerializer(band)\n  return Response(serializer.data)",
        "detail": "backend_old.bands.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.contacts.migrations.0001_initial",
        "description": "backend_old.contacts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend_old.contacts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.contacts.migrations.0002_alter_contact_email_alter_contact_phone",
        "description": "backend_old.contacts.migrations.0002_alter_contact_email_alter_contact_phone",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contacts', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='contact',\n            name='email',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "backend_old.contacts.migrations.0002_alter_contact_email_alter_contact_phone",
        "documentation": {}
    },
    {
        "label": "ContactsConfig",
        "kind": 6,
        "importPath": "backend_old.contacts.apps",
        "description": "backend_old.contacts.apps",
        "peekOfCode": "class ContactsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contacts'",
        "detail": "backend_old.contacts.apps",
        "documentation": {}
    },
    {
        "label": "Contact",
        "kind": 6,
        "importPath": "backend_old.contacts.models",
        "description": "backend_old.contacts.models",
        "peekOfCode": "class Contact(Model):\n  user_id = ForeignKey(User, on_delete=CASCADE)\n  name = CharField(max_length=255)\n  phone = CharField(max_length=255, null=True)\n  email = CharField(max_length=255, null=True)",
        "detail": "backend_old.contacts.models",
        "documentation": {}
    },
    {
        "label": "ContactSerializer",
        "kind": 6,
        "importPath": "backend_old.contacts.serializers",
        "description": "backend_old.contacts.serializers",
        "peekOfCode": "class ContactSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = Contact\n    fields = '__all__'",
        "detail": "backend_old.contacts.serializers",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.asgi",
        "description": "backend_old.drf_jwt_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend_old.drf_jwt_backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'authentication.apps.AuthenticationConfig',\n    'corsheaders',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n]",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\nROOT_URLCONF = 'drf_jwt_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'drf_jwt_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'drf_jwt_backend.wsgi.application'\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',)\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': 'devCodeCamp',",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.settings",
        "description": "backend_old.drf_jwt_backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': 'devCodeCamp',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,",
        "detail": "backend_old.drf_jwt_backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.urls",
        "description": "backend_old.drf_jwt_backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/auth/', include('authentication.urls')),\n    path('api/bands/', include('bands.urls')),\n]",
        "detail": "backend_old.drf_jwt_backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend_old.drf_jwt_backend.wsgi",
        "description": "backend_old.drf_jwt_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend_old.drf_jwt_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "TimeslotSerializer",
        "kind": 6,
        "importPath": "backend_old.tours.dates.serializers",
        "description": "backend_old.tours.dates.serializers",
        "peekOfCode": "class TimeslotSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = Timeslot\n    fields = '__all__'\n    # depth = 1\nclass DateContactSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = DateContact\n    fields = ['title', 'contact']\n    depth = 1",
        "detail": "backend_old.tours.dates.serializers",
        "documentation": {}
    },
    {
        "label": "DateContactSerializer",
        "kind": 6,
        "importPath": "backend_old.tours.dates.serializers",
        "description": "backend_old.tours.dates.serializers",
        "peekOfCode": "class DateContactSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = DateContact\n    fields = ['title', 'contact']\n    depth = 1\nclass DateSerializer(serializers.ModelSerializer):\n  timeslots = serializers.SerializerMethodField()\n  contacts = serializers.SerializerMethodField()\n  class Meta:\n    model = Date",
        "detail": "backend_old.tours.dates.serializers",
        "documentation": {}
    },
    {
        "label": "DateSerializer",
        "kind": 6,
        "importPath": "backend_old.tours.dates.serializers",
        "description": "backend_old.tours.dates.serializers",
        "peekOfCode": "class DateSerializer(serializers.ModelSerializer):\n  timeslots = serializers.SerializerMethodField()\n  contacts = serializers.SerializerMethodField()\n  class Meta:\n    model = Date\n    fields = ['id', 'date', 'title', 'location', 'deal', 'notes', 'is_show_day', 'is_confirmed', 'timeslots', 'contacts']\n    depth = 1\n  def get_timeslots(self, date):\n    date_timeslots = Timeslot.objects.filter(date_id=date.id)\n    serializer = TimeslotSerializer(date_timeslots, many=True)",
        "detail": "backend_old.tours.dates.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_old.tours.dates.urls",
        "description": "backend_old.tours.dates.urls",
        "peekOfCode": "urlpatterns = [\n  path('', views.tour_dates),\n  path('<int:date_id>/', views.date)\n]",
        "detail": "backend_old.tours.dates.urls",
        "documentation": {}
    },
    {
        "label": "tour_dates",
        "kind": 2,
        "importPath": "backend_old.tours.dates.views",
        "description": "backend_old.tours.dates.views",
        "peekOfCode": "def tour_dates(request, band_id, tour_id):\n  if request.method == GET:\n    dates = Date.objects.filter(tour_id=tour_id)\n    serializer = DateSerializer(dates, many=True)\n    return Response(serializer.data)\n  if request.method == POST:\n    serializer = DateSerializer(data=request.data)\n    return serializer.create_or_edit_date(request, tour_id)\n@api_view([GET, PUT, DELETE])\n@permission_classes([IsAuthenticated, IsTourUser])",
        "detail": "backend_old.tours.dates.views",
        "documentation": {}
    },
    {
        "label": "date",
        "kind": 2,
        "importPath": "backend_old.tours.dates.views",
        "description": "backend_old.tours.dates.views",
        "peekOfCode": "def date(request, band_id, tour_id, date_id):\n  date = get_object_or_404(Date, id=date_id)\n  if request.method == GET:\n    serializer = DateSerializer(date)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n  if request.method == PUT:\n    serializer = DateSerializer(date, data=request.data)\n    return serializer.create_or_edit_date(request, tour_id)\n  if request.method == DELETE:\n    date.delete()",
        "detail": "backend_old.tours.dates.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0001_initial",
        "description": "backend_old.tours.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('contacts', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('bands', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Date',",
        "detail": "backend_old.tours.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0002_date_title",
        "description": "backend_old.tours.migrations.0002_date_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='date',\n            name='title',\n            field=models.TextField(default=''),\n            preserve_default=False,",
        "detail": "backend_old.tours.migrations.0002_date_title",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0003_alter_tour_name_alter_tour_notes",
        "description": "backend_old.tours.migrations.0003_alter_tour_name_alter_tour_notes",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0002_date_title'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='tour',\n            name='name',\n            field=models.CharField(max_length=255, unique=True),\n        ),",
        "detail": "backend_old.tours.migrations.0003_alter_tour_name_alter_tour_notes",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0004_tour_is_archived",
        "description": "backend_old.tours.migrations.0004_tour_is_archived",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0003_alter_tour_name_alter_tour_notes'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tour',\n            name='is_archived',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "backend_old.tours.migrations.0004_tour_is_archived",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0005_alter_tour_name",
        "description": "backend_old.tours.migrations.0005_alter_tour_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0004_tour_is_archived'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='tour',\n            name='name',\n            field=models.CharField(max_length=255),\n        ),",
        "detail": "backend_old.tours.migrations.0005_alter_tour_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0006_rename_eventtype_timeslottype_and_more",
        "description": "backend_old.tours.migrations.0006_rename_eventtype_timeslottype_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0005_alter_tour_name'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='EventType',\n            new_name='TimeslotType',\n        ),\n        migrations.AlterField(",
        "detail": "backend_old.tours.migrations.0006_rename_eventtype_timeslottype_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0007_rename_event_type_timeslot_type",
        "description": "backend_old.tours.migrations.0007_rename_event_type_timeslot_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0006_rename_eventtype_timeslottype_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeslot',\n            old_name='event_type',\n            new_name='type',\n        ),",
        "detail": "backend_old.tours.migrations.0007_rename_event_type_timeslot_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0008_alter_tour_name_alter_tour_users",
        "description": "backend_old.tours.migrations.0008_alter_tour_name_alter_tour_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('tours', '0007_rename_event_type_timeslot_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='tour',\n            name='name',\n            field=models.CharField(error_messages={'unique': 'Name must be unique.'}, max_length=255),",
        "detail": "backend_old.tours.migrations.0008_alter_tour_name_alter_tour_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0009_alter_date_title",
        "description": "backend_old.tours.migrations.0009_alter_date_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0008_alter_tour_name_alter_tour_users'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='date',\n            name='title',\n            field=models.TextField(null=True),\n        ),",
        "detail": "backend_old.tours.migrations.0009_alter_date_title",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_old.tours.migrations.0010_alter_date_title",
        "description": "backend_old.tours.migrations.0010_alter_date_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tours', '0009_alter_date_title'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='date',\n            name='title',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "backend_old.tours.migrations.0010_alter_date_title",
        "documentation": {}
    },
    {
        "label": "TourPermission",
        "kind": 6,
        "importPath": "backend_old.tours.tours.permissions",
        "description": "backend_old.tours.tours.permissions",
        "peekOfCode": "class TourPermission(IsBandUser):\n  tour_id = None\n  tour = None\n  def has_permission(self, request, view):\n    if super().has_permission(request, view):\n      self.tour_id = view.kwargs.get('tour_id', None)\n      try:\n        self.tour = Tour.objects.get(id=self.tour_id)\n        return True\n      except:",
        "detail": "backend_old.tours.tours.permissions",
        "documentation": {}
    },
    {
        "label": "IsTourUser",
        "kind": 6,
        "importPath": "backend_old.tours.tours.permissions",
        "description": "backend_old.tours.tours.permissions",
        "peekOfCode": "class IsTourUser(TourPermission):\n  def has_permission(self, request, view):\n    if super().has_permission(request, view):\n      return request.user in self.tour.users.all()\n    return False",
        "detail": "backend_old.tours.tours.permissions",
        "documentation": {}
    },
    {
        "label": "TourUserSerializer",
        "kind": 6,
        "importPath": "backend_old.tours.tours.serializers",
        "description": "backend_old.tours.tours.serializers",
        "peekOfCode": "class TourUserSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = User\n    fields = ['id', 'email', 'username']\nclass TourSerializer(serializers.ModelSerializer):\n  dates = serializers.SerializerMethodField()\n  def get_dates(self, tour):\n    tour_dates = Date.objects.filter(tour_id=tour.id)\n    serializer = DateSerializer(tour_dates, many=True)\n    return serializer.data",
        "detail": "backend_old.tours.tours.serializers",
        "documentation": {}
    },
    {
        "label": "TourSerializer",
        "kind": 6,
        "importPath": "backend_old.tours.tours.serializers",
        "description": "backend_old.tours.tours.serializers",
        "peekOfCode": "class TourSerializer(serializers.ModelSerializer):\n  dates = serializers.SerializerMethodField()\n  def get_dates(self, tour):\n    tour_dates = Date.objects.filter(tour_id=tour.id)\n    serializer = DateSerializer(tour_dates, many=True)\n    return serializer.data\n  class Meta:\n    model = Tour\n    fields = ['id', 'name', 'notes', 'band_id', 'is_archived', 'users', 'dates']\n  def create_or_edit_tour(self, request):",
        "detail": "backend_old.tours.tours.serializers",
        "documentation": {}
    },
    {
        "label": "ActiveTourSerializer",
        "kind": 6,
        "importPath": "backend_old.tours.tours.serializers",
        "description": "backend_old.tours.tours.serializers",
        "peekOfCode": "class ActiveTourSerializer(serializers.ModelSerializer):\n  class Meta:\n    model = Tour\n    fields = ['id', 'name', 'notes', 'band_id', 'dates', 'users']\n    depth = 1\n  users = serializers.SerializerMethodField()\n  def get_users(self, tour):\n    serializer = TourUserSerializer(tour.users, many=True)\n    return serializer.data\n  dates = serializers.SerializerMethodField()",
        "detail": "backend_old.tours.tours.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_old.tours.tours.urls",
        "description": "backend_old.tours.tours.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.band_tours),\n    path('<int:tour_id>/', views.tour_details),\n    path('<int:tour_id>/dates/', include('tours.dates.urls')),\n    path('active/', views.get_active_tour),\n    path('<int:tour_id>/active/', views.set_active_tour),\n]",
        "detail": "backend_old.tours.tours.urls",
        "documentation": {}
    },
    {
        "label": "band_tours",
        "kind": 2,
        "importPath": "backend_old.tours.tours.views",
        "description": "backend_old.tours.tours.views",
        "peekOfCode": "def band_tours(request, band_id):\n  if request.method == GET:\n    tours = Tour.objects.filter(band_id=band_id)\n    serializer = TourSerializer(tours, many=True)\n    return Response(serializer.data)\n  elif request.method == POST:\n    serializer = TourSerializer(data=request.data)\n    return serializer.create_or_edit_tour(request)\n@api_view([GET, PUT, DELETE])\n@permission_classes([IsAuthenticated, IsTourUser])",
        "detail": "backend_old.tours.tours.views",
        "documentation": {}
    },
    {
        "label": "tour_details",
        "kind": 2,
        "importPath": "backend_old.tours.tours.views",
        "description": "backend_old.tours.tours.views",
        "peekOfCode": "def tour_details(request, band_id, tour_id):\n  tour = get_object_or_404(Tour, pk=tour_id)\n  if request.method == GET:\n    serializer = ActiveTourSerializer(tour)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n  elif request.method == PUT:\n    serializer = TourSerializer(tour, data=request.data)\n    return serializer.create_or_edit_tour(request)\n  elif request.method == DELETE:\n    tour.delete()",
        "detail": "backend_old.tours.tours.views",
        "documentation": {}
    },
    {
        "label": "get_active_tour",
        "kind": 2,
        "importPath": "backend_old.tours.tours.views",
        "description": "backend_old.tours.tours.views",
        "peekOfCode": "def get_active_tour(request, band_id):\n  user = get_object_or_404(User, id=request.user.id)\n  tour = get_object_or_404(Tour, id=user.active_tour_id)\n  serializer = ActiveTourSerializer(tour)\n  return Response(data=serializer.data)\n@api_view([POST])\n@permission_classes([IsAuthenticated, IsTourUser])\ndef set_active_tour(request, band_id, tour_id):\n  user = get_object_or_404(User, id=request.user.id)\n  user.set_active_tour(tour_id)",
        "detail": "backend_old.tours.tours.views",
        "documentation": {}
    },
    {
        "label": "set_active_tour",
        "kind": 2,
        "importPath": "backend_old.tours.tours.views",
        "description": "backend_old.tours.tours.views",
        "peekOfCode": "def set_active_tour(request, band_id, tour_id):\n  user = get_object_or_404(User, id=request.user.id)\n  user.set_active_tour(tour_id)\n  tour = get_object_or_404(Tour, id=tour_id)\n  serializer = ActiveTourSerializer(tour)\n  return Response(serializer.data)",
        "detail": "backend_old.tours.tours.views",
        "documentation": {}
    },
    {
        "label": "ToursConfig",
        "kind": 6,
        "importPath": "backend_old.tours.apps",
        "description": "backend_old.tours.apps",
        "peekOfCode": "class ToursConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tours'",
        "detail": "backend_old.tours.apps",
        "documentation": {}
    },
    {
        "label": "Tour",
        "kind": 6,
        "importPath": "backend_old.tours.models",
        "description": "backend_old.tours.models",
        "peekOfCode": "class Tour(Model):\n  name = CharField(max_length=255, error_messages={'unique': \"Name must be unique.\"})\n  band = ForeignKey(Band, on_delete=CASCADE)\n  notes = TextField(null=True, blank=True)\n  users = ManyToManyField(User, blank=True)\n  is_archived = BooleanField(default=False)\n  def __str__(self) -> str:\n    return f'{self.name} ({self.band.name})'\nclass Date(Model):\n  tour = ForeignKey(Tour, on_delete=CASCADE)",
        "detail": "backend_old.tours.models",
        "documentation": {}
    },
    {
        "label": "Date",
        "kind": 6,
        "importPath": "backend_old.tours.models",
        "description": "backend_old.tours.models",
        "peekOfCode": "class Date(Model):\n  tour = ForeignKey(Tour, on_delete=CASCADE)\n  date = DateField()\n  title = TextField(null=True, blank=True)\n  location = TextField(null=True)\n  notes = TextField(null=True)\n  is_show_day = BooleanField(default=False)\n  is_confirmed = BooleanField(default=False)\n  deal = TextField(null=True)\n  def __str__(self) -> str:",
        "detail": "backend_old.tours.models",
        "documentation": {}
    },
    {
        "label": "DateContact",
        "kind": 6,
        "importPath": "backend_old.tours.models",
        "description": "backend_old.tours.models",
        "peekOfCode": "class DateContact(Model):\n  date = ForeignKey(Date, on_delete=CASCADE)\n  contact = ForeignKey(Contact, on_delete=CASCADE)\n  title = CharField(max_length=255)\nclass TimeslotType(Model):\n  type = CharField(max_length=255)\n  def __str__(self) -> str:\n    return self.type\nclass Timeslot(Model):\n  date = ForeignKey(Date, on_delete=CASCADE)",
        "detail": "backend_old.tours.models",
        "documentation": {}
    },
    {
        "label": "TimeslotType",
        "kind": 6,
        "importPath": "backend_old.tours.models",
        "description": "backend_old.tours.models",
        "peekOfCode": "class TimeslotType(Model):\n  type = CharField(max_length=255)\n  def __str__(self) -> str:\n    return self.type\nclass Timeslot(Model):\n  date = ForeignKey(Date, on_delete=CASCADE)\n  description = CharField(max_length=255)\n  start_time = TimeField()\n  end_time = TimeField(null=True)\n  start_location = TextField(null=True)",
        "detail": "backend_old.tours.models",
        "documentation": {}
    },
    {
        "label": "Timeslot",
        "kind": 6,
        "importPath": "backend_old.tours.models",
        "description": "backend_old.tours.models",
        "peekOfCode": "class Timeslot(Model):\n  date = ForeignKey(Date, on_delete=CASCADE)\n  description = CharField(max_length=255)\n  start_time = TimeField()\n  end_time = TimeField(null=True)\n  start_location = TextField(null=True)\n  end_location = TextField(null=True)\n  type = ForeignKey(TimeslotType, on_delete=CASCADE)",
        "detail": "backend_old.tours.models",
        "documentation": {}
    },
    {
        "label": "GET",
        "kind": 5,
        "importPath": "backend_old.constants",
        "description": "backend_old.constants",
        "peekOfCode": "GET = 'GET'\nPOST = 'POST'\nPUT = 'PUT'\nPATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend_old.constants",
        "documentation": {}
    },
    {
        "label": "POST",
        "kind": 5,
        "importPath": "backend_old.constants",
        "description": "backend_old.constants",
        "peekOfCode": "POST = 'POST'\nPUT = 'PUT'\nPATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend_old.constants",
        "documentation": {}
    },
    {
        "label": "PUT",
        "kind": 5,
        "importPath": "backend_old.constants",
        "description": "backend_old.constants",
        "peekOfCode": "PUT = 'PUT'\nPATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend_old.constants",
        "documentation": {}
    },
    {
        "label": "PATCH",
        "kind": 5,
        "importPath": "backend_old.constants",
        "description": "backend_old.constants",
        "peekOfCode": "PATCH = 'PATCH'\nDELETE = 'DELETE'",
        "detail": "backend_old.constants",
        "documentation": {}
    },
    {
        "label": "DELETE",
        "kind": 5,
        "importPath": "backend_old.constants",
        "description": "backend_old.constants",
        "peekOfCode": "DELETE = 'DELETE'",
        "detail": "backend_old.constants",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend_old.manage",
        "description": "backend_old.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE',\n                          'drf_jwt_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"",
        "detail": "backend_old.manage",
        "documentation": {}
    }
]